https://github.com/hjs101/CICD_manual#docker-%EC%84%A4%EC%B9%98
https://lab.ssafy.com/s07-bigdata-dist-sub2/S07P22B101/-/tree/main/BE/percast

http://j7b101.p.ssafy.io:9090/

기존
docker image prune -a --force
mkdir -p /var/jenkins_home/images_tar
cd /var/jenkins_home/workspace/deploytest/FE/
docker build -t vue .
docker save vue > /var/jenkins_home/images_tar/vue.tar

cd /var/jenkins_home/workspace/deploytest/BE/percast/
docker build -t springboot .
docker save springboot > /var/jenkins_home/images_tar/springboot.tar

ls /var/jenkins_home/images_tar


ssh
기존
sudo docker load < /jenkins/images_tar/react.tar
sudo docker load < /jenkins/images_tar/django.tar

if (sudo docker ps | grep "react then sudo docker stop react; fi
if (sudo docker ps | grep "django"); then sudo docker stop django; fi

sudo docker run -it -d --rm -p 80:80 -p 443:443 --name react react
echo "Run testproject_react"
sudo docker run -it -d --rm -p 8080:8080  --name django django
echo "Run testproject"

수정
sudo docker load < /jenkins/images_tar/vue.tar
sudo docker load < /jenkins/images_tar/springboot.tar

if (sudo docker ps | grep "vue"); then sudo docker stop vue; fi
if (sudo docker ps | grep "springboot"); then sudo docker stop springboot; fi

sudo docker run -it -d --rm -p 80:80 -p 443:443 --name vue vue
echo "Run testproject_vue"
sudo docker run -it -d --rm -p 8080:8080  --name springboot springboot
echo "Run testproject"




sudo docker run -it --rm --name certbot -p 80:80\
             -v "/home/ubuntu/certbot/conf:/etc/letsencrypt" \
             -v "/home/ubuntu/certbot/log:/var/log/letsencrypt" \
             -v "/home/ubuntu/certbot/www:/var/www/certbot" \
             certbot/certbot certonly

3.34.43.90 3.34.43.90:80 j7a101.p.ssafy.io www.j7a101.p.ssafy.io.com